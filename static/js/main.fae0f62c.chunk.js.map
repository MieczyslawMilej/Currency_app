{"version":3,"sources":["components/ChangeCurrencyRate.js","actions/index.js","components/AddExchangeTask.js","components/TransactionItem.js","components/TransactionList.js","components/TransactionSum.js","components/HighestTransaction.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","rateValue","dispatch","className","currencyRate","htmlFor","name","ref","node","onClick","type","number","value","transactionName","euroValue","onSubmit","e","preventDefault","trim","addTransaction","transaction","toFixed","id","role","aria-label","currencyTransactions","map","key","TransactionSum","sum","reduce","acc","curr","highest","App","initialValue","currencyApp","action","maxId","Math","max","filteredTransactions","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"gOA6BeA,eAJS,SAAAC,GAAK,MAAK,CAChCA,WAGsC,KAAzBD,EAzBY,SAAC,GAAyB,IAM/CE,EANwBC,EAAsB,EAAtBA,SAAUF,EAAY,EAAZA,MAOtC,OACE,yBAAKG,UAAU,iBACb,6CACgB,0BAAMA,UAAU,aAAaH,EAAMI,eAEnD,2BAAOC,QAAQ,cAAf,gBACA,2BAAOC,KAAK,aAAaC,IAAK,SAAAC,GAAI,OAAKP,EAAYO,KACnD,4BAAQL,UAAU,MAAMM,QAbJ,WACtBP,ECAiC,CACnCQ,KAAM,cACNC,QDFuBV,EAAUW,QAC/BX,EAAUW,MAAQ,KAWhB,cEsBSb,iBAnCS,SAAC,GAAkB,IACrCc,EACAC,EAFqBZ,EAAe,EAAfA,SAGzB,OACE,yBAAKC,UAAU,YAEX,kBAAC,EAAD,MACA,mDACF,0BACEY,SAAU,SAAAC,GACRA,EAAEC,iBACGJ,EAAgBD,MAAMM,QAAWJ,EAAUF,MAAMM,SAGtDhB,EDnBoB,SAACI,EAAMQ,GAAP,MAAsB,CAClDJ,KAAM,kBACNI,YACAR,QCgBiBa,CAAeN,EAAgBD,OAAQE,EAAUF,QAC1DC,EAAgBD,MAAQ,GACxBE,EAAUF,MAAQ,MAGpB,6BACE,mDACA,2BAAOL,IAAK,SAAAC,GAAI,OAAKK,EAAkBL,MAEzC,6BACE,8DACA,2BAAOD,IAAK,SAAAC,GAAI,OAAKM,EAAYN,KACjC,4BAAQE,KAAK,SAASP,UAAU,OAAhC,aCVKJ,iBAjBS,SAAC,GAA6C,IAA3CqB,EAA0C,EAA1CA,YAAahB,EAA6B,EAA7BA,aAAcF,EAAe,EAAfA,SACpD,OACE,oCACE,wBAAIC,UAAU,oBACZ,2BAAIiB,EAAYd,MAChB,2BAAIc,EAAYN,UAAhB,WACA,4BAAKM,EAAYN,UAAYV,GAAciB,QAAQ,GAAnD,QACA,4BAAQlB,UAAU,aAAaM,QAAS,kBAAMP,EFAd,CACtCQ,KAAM,qBACNY,GEF+EF,EAAYE,OACnF,0BAAMC,KAAK,MAAMC,aAAW,KAA5B,gBCaKzB,eAJS,SAAAC,GAAK,MAAK,CAChCA,WAGsC,GAAzBD,EArBS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzB,OACE,oCACE,4BACGA,EAAMyB,qBAAqBC,KAAI,SAAAN,GAAW,OACzC,kBAAC,EAAD,CACEO,IAAKP,EAAYE,GACjBF,YAAaA,EACbhB,aAAcJ,EAAMI,uBCAjBwB,EAXQ,SAAC,GAAe,IAAb5B,EAAY,EAAZA,MAClB6B,EAAM7B,EAAMyB,qBAAqBK,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKlB,YAAW,GAEnF,OACE,oCAAE,wDACA,2BAAIe,EAAIR,QAAQ,GAAhB,WACA,4BAAKQ,EAAM7B,EAAMI,cAAciB,QAAQ,GAAvC,UCqBStB,eAJS,SAAAC,GAAK,MAAK,CAChCA,WAGsC,GAAzBD,EAzBY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtBiC,EAAUjC,EAAMyB,qBAAqBK,QAAO,SAACC,EAAKC,GACtD,OAAOD,EAAIjB,UAAYkB,EAAKlB,UAAYiB,EAAMC,IAC7C,GAEH,OAAgB,IAAZC,EACK,KAIP,yBAAK9B,UAAU,+BACb,qDACA,2BAAI8B,EAAQ3B,MACZ,6BAAM2B,EAAQnB,UAAYd,EAAMI,cAAciB,QAAQ,GAAtD,QACA,+BAAKY,EAAQnB,UAAUO,QAAQ,GAA/B,WAEA,kBAAC,EAAD,CAAgBrB,MAAOA,QCKdkC,MAnBf,WACE,OACE,oCACE,yBAAK/B,UAAU,OACb,wDACA,yBAAKA,UAAU,WACb,6BACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,QAGJ,kBAAC,EAAD,S,sBCnBFgC,EAAe,CACnB/B,aAAc,KACdqB,qBAAsB,CACpB,CACEnB,KAAM,oBACNQ,UAAW,EACXQ,GAAI,GAEN,CACEhB,KAAM,qBACNQ,UAAW,MACXQ,GAAI,KAoCKc,EA/BK,WAAmC,IAAlCpC,EAAiC,uDAAzBmC,EAAcE,EAAW,uCACpD,OAAQA,EAAO3B,MACb,IAAK,kBACH,OAAO,2BACFV,GADL,IAEEyB,qBAAqB,GAAD,mBACfzB,EAAMyB,sBADS,CAElB,CACEnB,KAAM+B,EAAO/B,KACbQ,UAAWuB,EAAOvB,UAClBQ,GACEtB,EAAMyB,qBAAqBK,QACzB,SAACQ,EAAOlB,GAAR,OAAwBmB,KAAKC,IAAIpB,EAAYE,GAAIgB,MAChD,GACC,OAId,IAAK,cACH,OAAO,2BAAKtC,GAAZ,IAAmBI,aAAciC,EAAO1B,SAE1C,IAAK,qBACF,IAAM8B,EAAuBzC,EAAMyB,qBAAqBiB,QACvD,SAAAtB,GAAW,OAAIA,EAAYE,KAAOe,EAAOf,MAE3C,OAAO,2BAAItB,GAAX,IAAkByB,qBAAsBgB,IAC1C,QACE,OAAOzC,ICpCP2C,EAAQC,YACZR,EACAS,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.fae0f62c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeRate } from \"../actions\";\r\n\r\nconst ChangeCurrencyRate = ({ dispatch, state }) => {\r\n  const changeRateValue = () => {\r\n    dispatch(changeRate(+rateValue.value));\r\n    rateValue.value = \"\";\r\n  };\r\n\r\n  let rateValue;\r\n  return (\r\n    <div className=\"currency-rate\">\r\n      <h3>\r\n        Exchange rate <span className=\"important\">{state.currencyRate}</span>\r\n      </h3>\r\n      <label htmlFor=\"changeRate\">Change rate </label>\r\n      <input name=\"changeRate\" ref={node => (rateValue = node)} />\r\n      <button className=\"btn\" onClick={changeRateValue}>\r\n        CHANGE\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  state\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ChangeCurrencyRate);\r\n","export const addTransaction = (name, euroValue) => ({\r\n  type: \"ADD_TRANSACTION\",\r\n  euroValue,\r\n  name\r\n});\r\n\r\nexport const changeRate = number => ({\r\n  type: \"CHANGE_RATE\",\r\n  number\r\n});\r\n\r\nexport const deleteTransaction = id => ({\r\n  type: \"DELETE_TRANSACTION\",\r\n  id\r\n});\r\n\r\nexport const showInput = () => ({\r\n  type: \"SHOW_CURRENCY_INPUT\"\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTransaction } from \"../actions\";\r\nimport ChangeCurrencyRate from \"./ChangeCurrencyRate\";\r\n\r\nconst AddExchangeTask = ({ dispatch }) => {\r\n  let transactionName;\r\n  let euroValue;\r\n  return (\r\n    <div className=\"add-task\">\r\n\r\n        <ChangeCurrencyRate />\r\n        <h3>Add new transaction</h3>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!transactionName.value.trim() || !euroValue.value.trim()) {\r\n            return;\r\n          }\r\n          dispatch(addTransaction(transactionName.value, +euroValue.value));\r\n          transactionName.value = \"\";\r\n          euroValue.value = \"\";\r\n        }}\r\n      >\r\n        <div>\r\n          <label>Transaction Name</label>\r\n          <input ref={node => (transactionName = node)} />\r\n        </div>\r\n        <div>\r\n          <label>Transaction Value in €</label>\r\n          <input ref={node => (euroValue = node)} />\r\n          <button type=\"submit\" className=\"btn\">\r\n            ADD\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(AddExchangeTask);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTransaction } from \"../actions\";\r\n\r\nconst TransactionItem = ({ transaction, currencyRate, dispatch }) => {\r\n  return (\r\n    <>\r\n      <li className=\"transaction-item\">\r\n        <p>{transaction.name}</p>\r\n        <p>{transaction.euroValue} €</p>\r\n        <p>{(transaction.euroValue * currencyRate).toFixed(2)} PLN</p>\r\n        <button className=\"btn delete\" onClick={() => dispatch(deleteTransaction(transaction.id))}>\r\n          <span role=\"img\" aria-label=\"x\">\r\n            ❌\r\n          </span>\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect()(TransactionItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TransactionItem from \"./TransactionItem\";\r\n\r\nconst TransactionList = ({ state }) => {\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {state.currencyTransactions.map(transaction => (\r\n          <TransactionItem\r\n            key={transaction.id}\r\n            transaction={transaction}\r\n            currencyRate={state.currencyRate}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  state\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(TransactionList);\r\n","import React from \"react\";\r\n\r\nconst TransactionSum = ({ state }) => {\r\n  const sum = state.currencyTransactions.reduce((acc, curr) => acc + curr.euroValue, 0);\r\n\r\n  return (\r\n    <><h4>Sum of all transactions:</h4>\r\n      <p>{sum.toFixed(2)} €</p>\r\n      <p>{(sum * state.currencyRate).toFixed(2) } PLN</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionSum;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TransactionSum from \"./TransactionSum\";\r\n\r\nconst HighestTransaction = ({ state }) => {\r\n  const highest = state.currencyTransactions.reduce((acc, curr) => {\r\n    return acc.euroValue > curr.euroValue ? acc : curr;\r\n  }, 0);\r\n\r\n  if (highest === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"highest-transaction-wrapper\">\r\n      <h4>Highest transaction: </h4>\r\n      <p>{highest.name}</p>\r\n      <p>{+(highest.euroValue * state.currencyRate).toFixed(2)} PLN</p>\r\n      <p> {highest.euroValue.toFixed(2)} €</p>\r\n\r\n      <TransactionSum state={state} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  state\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(HighestTransaction);\r\n","import React from \"react\";\nimport \"../scss/main.scss\";\nimport AddExchangeTask from \"./AddExchangeTask\";\nimport TransactionList from \"./TransactionList\";\nimport HighestTransaction from \"./HighestTransaction\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <h1>My currency transactions</h1>\n        <div className=\"wrapper\">\n          <div>\n            <AddExchangeTask />\n          </div>\n          <div>\n            <HighestTransaction />\n          </div>\n        </div>\n        <TransactionList />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const initialValue = {\r\n  currencyRate: 4.44,\r\n  currencyTransactions: [\r\n    {\r\n      name: \"First transaction\",\r\n      euroValue: 4,\r\n      id: 0\r\n    },\r\n    {\r\n      name: \"Second transaction\",\r\n      euroValue: 130.3,\r\n      id: 1\r\n    }\r\n  ]\r\n};\r\n\r\nconst currencyApp = (state = initialValue, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        currencyTransactions: [\r\n          ...state.currencyTransactions,\r\n          {\r\n            name: action.name,\r\n            euroValue: action.euroValue,\r\n            id:\r\n              state.currencyTransactions.reduce(\r\n                (maxId, transaction) => Math.max(transaction.id, maxId),\r\n                -1\r\n              ) + 1\r\n          }\r\n        ]\r\n      };\r\n    case \"CHANGE_RATE\":\r\n      return { ...state, currencyRate: action.number };\r\n\r\n    case \"DELETE_TRANSACTION\":\r\n       const filteredTransactions = state.currencyTransactions.filter(\r\n        transaction => transaction.id !== action.id\r\n      );\r\n      return {...state, currencyTransactions: filteredTransactions};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currencyApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport currencyApp from \"./reducers\";\n\nconst store = createStore(\n  currencyApp,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}